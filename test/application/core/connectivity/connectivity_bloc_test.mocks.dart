// Mocks generated by Mockito 5.2.0 from annotations
// in moviz/test/application/core/connectivity/connectivity_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:connectivity_plus/connectivity_plus.dart' as _i4;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:moviz/infrastructure/movie/remote_data_source/i_network_info.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [INetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockINetworkInfo extends _i1.Mock implements _i2.INetworkInfo {
  MockINetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i4.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i5.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(Invocation.getter(#onConnectivityChanged),
              returnValue: Stream<_i5.ConnectivityResult>.empty())
          as _i3.Stream<_i5.ConnectivityResult>);
  @override
  _i3.Future<_i5.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(Invocation.method(#checkConnectivity, []),
              returnValue: Future<_i5.ConnectivityResult>.value(
                  _i5.ConnectivityResult.bluetooth))
          as _i3.Future<_i5.ConnectivityResult>);
}

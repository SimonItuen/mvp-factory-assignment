// Mocks generated by Mockito 5.2.0 from annotations
// in moviz/test/infrastructure/movie/local_data_source/local_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:moviz/infrastructure/movie/local_data_source/i_database_client.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [IDatabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIDatabaseClient<T> extends _i1.Mock
    implements _i2.IDatabaseClient<T> {
  MockIDatabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<T>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
          returnValue: Future<List<T>>.value(<T>[])) as _i3.Future<List<T>>);
  @override
  _i3.Future<T> get(String? id) =>
      (super.noSuchMethod(Invocation.method(#get, [id]),
          returnValue: Future<T>.value(null)) as _i3.Future<T>);
  @override
  _i3.Future<void> put(String? id, T? object) =>
      (super.noSuchMethod(Invocation.method(#put, [id, object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> delete(String? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
